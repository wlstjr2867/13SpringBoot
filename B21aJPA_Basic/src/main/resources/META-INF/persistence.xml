<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="https://jakarta.ee/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence 
                        https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd"
	version="3.0">

	<!-- 
	Java VM(가상머신)에 생성되는 영속성(Persistance) 개체의 이름을 MyJPA로
	지정한다.
	 -->
	<persistence-unit name="MyJPA" transaction-type="RESOURCE_LOCAL">
		<!-- 엔티티(테이블)로 사용할 클래스의 풀 경로 -->
		<!-- <class>myjpa1.Member1</class> -->
		<class>myjpa2.Member2</class>
		
		<!-- 명시적으로 나열된 클래스들만 엔티티로 인식 -->
		<exclude-unlisted-classes>true</exclude-unlisted-classes>
	
		<!-- DB연결정보 및 다양한 옵션 설정 -->
		<properties>
			<!-- 필수 : 데이터베이스 접속 정보 -->
			<property name="jakarta.persistence.jdbc.driver"
				value="oracle.jdbc.OracleDriver" />
			<property name="jakarta.persistence.jdbc.url"
				value="jdbc:oracle:thin:@localhost:1521:xe" />
			<property name="jakarta.persistence.jdbc.user"
				value="musthave" />
			<property name="jakarta.persistence.jdbc.password"
				value="1234" />
			
			<!-- 
			SQL방언(dialect) : 하이버네이트가 특정 데이터베이스에 맞는 SQL을
				생성하도록 설정. 여기서는 오라클에서 사용할 수 있는 쿼리문을 생성
			 -->
			<property name="hibernate.dialect"
				value="org.hibernate.dialect.OracleDialect" />
			
			<!-- 옵션 -->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sq" value="true" />
			<property name="hibernate.id.new_generator_mappings"
				value="true" />

			<!-- 
			스프링 컨테이너를 시작할때 사용할 수 있는 옵션
			create : 시작할때 기존 테이블 삭제 후 다시 생성. drop+create
			none : 아무 작업도 하지않음.
			※ 실무에서는 오라클에 테이블과 시퀀스를 SQL문을 이용해서 만들어두고
			none으로 설정하는것이 좋다.
			 -->
			<property name="hibernate.hbm2ddl.auto" value="create" />
		</properties>
	</persistence-unit>
</persistence>